---
css: |
    .hamburger { display: none; }
    .nav-main-outer { 
        color: var(--menu-fg);
        background: var(--menu-bg);
    }
    [data-comp="nav-main-menu"] {
        margin: 0;
    }
    [data-comp="nav-main-menu"] a {
        color: inherit;
        text-decoration: none;
        padding: calc(var(--spacing-normal)*1.5) var(--spacing-large);
    }
    [data-comp="nav-main-menu"] a:hover {
        border-color: var(--menu-fg)!important;
        background: var(--menu-fg)!important;
        color: var(--menu-bg)!important;
    }
    [data-comp="nav-main-menu"] a[href="about:blank"] {
        background: var(--menu-off);
        border-color: var(--menu-off);
    }
    [data-comp="nav-main-menu"] .current {
        border-color: var(--menu-fg);
    }
    [data-comp="nav-main-menu"] > ul {
        display: flex;
        list-style: none;
        margin: 0;
        padding: 0;
        flex-wrap: nowrap;
        gap: 0em;
    }
    [data-comp="nav-main-menu"] > ul > li {
        position: relative;
    }
    [data-comp="nav-main-menu"] > ul > li.has-submenu {
        display: flex;
        align-items: center;
    }
    [data-comp="nav-main-menu"] > ul > li > a {
        display: inline-block;
        height: 100%;
        border-bottom: 4px solid var(--menu-bg);
    }
    [data-comp="nav-main-menu"] > ul > li button {
        background: transparent;
        padding: 0 1rem;
        cursor: pointer;
        border: 0;
        height: 100%;
        margin: 0;
    }
    [data-comp="nav-main-menu"] > ul > li button:hover, [data-comp="nav-main-menu"] > ul > li button:focus {
        background: var(--menu-fg);
    }
    [data-comp="nav-main-menu"] > ul > li button > span {
        display: block;
        border: 2px solid var(--menu-fg);
        border-top: 0;
        border-right: 0;
        transform: rotate(-45deg);
        width: 0.5rem;
        height: 0.5rem;
        margin: 0rem;
        margin-top: -0.25rem;
    }
    [data-comp="nav-main-menu"] > ul > li button[aria-expanded=true] > span {
        transform: rotate(135deg);
        margin-top: 0.25rem;
    }
    [data-comp="nav-main-menu"] > ul > li button:hover > span, [data-comp="nav-main-menu"] > ul > li button:focus > span {
        border-color: var(--menu-bg);
    }
    [data-comp="nav-main-menu"] > ul > li > ul {
        display: none;
        position: absolute;
        top: 100%;
        background: var(--menu-bg);
        width: 240px;
        z-index: 1000;
    }
    [data-comp="nav-main-menu"] > ul > li > a:hover > ul, [data-comp="nav-main-menu"] .has-submenu button[aria-expanded=true] + ul {
        display: block;
    }
    [data-comp="nav-main-menu"] > ul > li > ul a {
        display: block;
        border-right: 4px solid var(--menu-bg);
    }
    @media only screen and (max-width: 1260px) {
        [data-comp="nav-main-menu"] a { padding: var(--spacing-normal); }
        [data-comp="nav-main-menu"] > ul { margin-left: var(--spacing-normal); }
        header { border-bottom: 1px solid var(--menu-off); }
        .site-header a { margin-left: 3rem; }
        .hamburger { display: block; }
        label.hamburger::after {
          position: absolute;
          padding: 0.2em;
          width: 100%;
          height: 100%;
          top: 0px;
          left: 0px;
          content: "\2261";
          font-size: 32px;
          text-align: center;
          line-height: 1.3em;
        }
        .nv { display: none; }
        .hamburger {
          position: absolute;
          left: calc(1.5*var(--spacing-normal));
          top: 2em;
          width: 3em;
          height: 3em;
          font-size: 1em;
          margin: 0;
          cursor: pointer;
          transition: left 0.3s ease-in;
        }
        input.hamburger { opacity: 0.01; }
        .nav-main-outer {
          position: fixed;
          left: -90%;
          top: 0;
          width: 90%;
          height: 100%;
          background: var(--menu-fg);
          z-index: 1000;
          padding-top: 4em;
          transition: left 0.3s ease-in;
          overflow-y: auto;
        }
        [data-comp="nav-main-menu"] {
          width: 100%;
        }
        [data-comp="nav-main-menu"] a { background: var(--menu-fg); color: var(--menu-bg); border-left: 4px solid transparent; }
        [data-comp="nav-main-menu"] a:hover, [data-comp="nav-main-menu"] a:focus {
          border-color: var(--menu-bg)!important;
          background: var(--menu-bg)!important;
          color: var(--menu-fg)!important;
        }
        [data-comp="nav-main-menu"] .current { border-color: var(--menu-bg)!important; border-bottom: 0; border-right: 0; }
        [data-comp="nav-main-menu"] > ul {
          display: block;
          margin: 0;
        }
        [data-comp="nav-main-menu"] > ul > li a {
          width: 100%;
          height: auto;
          border-bottom: 0;
          display: block;
        }
        input.hamburger:checked, input.hamburger:checked + .hamburger { position: fixed; z-index: 1001; top: var(--spacing-normal); left: calc(90% - 3em - var(--spacing-normal)); }
        input.hamburger:checked + label { position: absolute; }
        input.hamburger:checked + label::after { content: "×"; padding: 0; }
        input.hamburger:checked + label + .nav-main-outer {
          left: 0;
          box-shadow: 3px 0px 1em rgba(0,0,0,0.5);
        }
        [data-comp="nav-main-menu"] button { display: none; }
        [data-comp="nav-main-menu"] > ul > li.has-submenu { flex-direction: column; }
        [data-comp="nav-main-menu"] > ul > li > ul { display: block; position: relative; top: unset; width: 100%; }
        [data-comp="nav-main-menu"] > ul > li > ul a { padding-left: 3rem; border-right: 0; }
    }
---
<input type="checkbox" id="hamburger" class="hamburger">
<label for="hamburger" class="hamburger"><span class="nv">Toggle menu (if not visible)</span></label>
<div class="nav-main-outer">
    <nav data-comp="nav-main-menu" class="holder">
        <ul>
        {{ for i of mainMenu }}
        {{#- Will include the url for the source page, or the direct URL, defaulting to about:blank -#}}
        <li{{ if i.subMenu }} class="has-submenu"{{ /if }}>
            <a href="{{ i.url || "about:blank" }}"{{ if url==i.url || (i.url != "/" && url.match("^"+i.url)) }} class="current"{{ /if }}{{ if i.subMenu }} aria-expanded="false"{{ /if }}>
            {{ i.title }}
            </a>
			{{ if i.subMenu }}
            <ul>
            {{ for j of i.subMenu }}
            <li>
                <a href="{{ j.url || "about:blank" }}"{{ if url==j.url || (j.url != "/" && url.match("^"+j.url)) }} class="current"{{ /if }}>
                {{ j.title }}
                </a>
            </li>
            {{ /for }}
            </ul>
            {{ /if }}
        </li>
        {{ /for }}
        </ul>
    </nav>
</div>
<!--<div id="log" class="warning padded"><h3>Temporary debugging log</h3></div>-->
<!-- Accessible menus https://www.w3.org/WAI/tutorials/menus/flyout/ -->
<script>
var menuItems = document.querySelectorAll('li.has-submenu');
var timer1;
function log(txt){
//	document.getElementById('log').innerHTML += '<div>'+txt+'</div>';
}
function subMenuOpen(el,state){
	clearTimeout(timer1);
	var s = (state ? "true":"false");
	log('subMenuOpen '+state);
	el.parentNode.querySelector('a').setAttribute('aria-expanded',s);
	el.parentNode.querySelector('button').setAttribute('aria-expanded',s);
}

menuItems.forEach((el,i)=>{
	var activatingA = el.querySelector('a');
	log('add submenu '+activatingA.text);
	var btn = document.createElement('button');
	btn.innerHTML = '<span><span class="visuallyhidden">show submenu for “' + activatingA.text.replace(/^ | $/,"") + '”</span></span>';
	activatingA.after(btn);
	var subLinks = el.querySelectorAll('ul li a');
	subLinks.forEach((element) => {
		if(element == activatingA){
			element.addEventListener("mouseover", function(event){
				subMenuOpen(event.originalTarget,true);
				clearTimeout(timer1);
			});

			element.addEventListener("mouseout", function(event){
				timer1 = setTimeout(function(ev){
					subMenuOpen(event.originalTarget,false);
				}, 1000);
			});
		}
	});
	btn.addEventListener("click", function(event){
		log('button click '+state);
		var state = btn.getAttribute('aria-expanded')||"false";
		subMenuOpen(this,state=="true" ? false : true);
		event.preventDefault();
	});
});
</script>
