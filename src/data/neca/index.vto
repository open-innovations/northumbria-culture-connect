---
title: North East Combined Authority
description: |
   Culture programmes funded by the North East Combined Authority (NECA) within Newcastle and surrounding areas.
extended_description: |
    The data highlights investment in the region’s culture sector, supporting events, local community, employment, and businesses. By funding culture programmes, NECA contributes to the local economy, provides opportunities for artists and creative organisations, and promotes access to arts and creative activities for Newcastle residents. The data shown below covers the period January to June 2024.
tags:
    - funding

tableGroups:
    Events:
        - Numbers of attendees participating in a culture tourism event
        - Number of culture / tourism events taking place
    Support:
        - Total participants supported
        - Disabled or deaf participants receiving support or an intervention
        - Participants over 50 years of age receiving support or an intervention
        - Participants (below 25 years of age) who are unemployed or inactive receiving support or an intervention
        - Unemployed (including long term unemployed) participants receiving support or an intervention
    Employment:
        - Direct Jobs Created
        - Indirect Jobs Created
        - Number of apprenticeship/ traineeship opportunities achieved
        - Participants gaining their first level 3 and above qualification
        - Economically inactive participants not in education or training receiving support or an intervention
        - Economically Inactive participants engaged in job-searching upon leaving
        - Employed, including self-employed receiving support or an intervention
    Business Support:
        - Number of enterprises receiving support
        - Number of enterprises receiving financial support other than grants
---
{{>
	const newcastle = release.funding_by_area.find(x => x.Area == 'Newcastle upon Tyne')
}}

{{ comp Section }}
	<h2>Newcastle upon Tyne headlines</h2>
	<p>
		This section shows the North East Combined Authority funding for Newcastle-based organisations.
	</p>
	<ul class="grid centred">
		<li class="block bg-green-75 increased-contrast">
			<p class="bang">{{ newcastle.Number |> toLocaleString }}</p>
			<p>Number of grants awarded</p>
		</li>
		<li class="block bg-green-75 increased-contrast">
			<p class="bang">{{ newcastle.Total |> displayCurrency  }}</p>
			<p>Total funding amount</p>
		</li>
		<li class="block bg-green-75 increased-contrast">
			<p class="bang">{{ newcastle.Average |> displayCurrency  }}</p>
			<p>Average award amount</p>
		</li>
	</ul>
{{ /comp }}


{{ comp Section }}
	<h2>Cross regional figures</h2>

	{{> const max_funding_num = Math.ceil(Math.max(...release.funding_by_area.map(x => x.Number)) ) }}

	{{ comp WidthLimit }}
		{{ comp Card { classes: 'bg-green-100'} }}
			{{ comp SaveableVisualisation {id: 'grants-by-area', file: "funding_by_area.csv" } }}
				<figure>
				{{ comp.oi.chart.bar({
					config: {
						data: release.funding_by_area,
						category: "Area",
						width: 1000,
						height:400,
						series: [
							{ title: "Number of grants", value: "Number", tooltip: "<strong>Number of grants<br /></strong>{{ Area }}: {{ Number | toLocaleString() }}" }
						],
						axis: {
							x: {
								max: max_funding_num, 
							}
						}
					}
				}) }}
				<figcaption>Grants awarded by area</figcaption>
				</figure>
			{{ /comp }}
		{{ /comp }}
	{{ /comp }}

	{{> const max_funding_total = Math.ceil(Math.max(...release.funding_by_area.map(x => x.Total)) / 1e5) * 1e5 }}

	{{ comp WidthLimit }}
		{{ comp Card { classes: 'bg-green-100'} }}
					{{ comp SaveableVisualisation {id: 'funding-by-area', file: "funding_by_area.csv" } }}
				<figure>
				{{ comp.oi.chart.bar({
					config: {
						data: release.funding_by_area,
						category: "Area",
						width: 1000,
						height: 400,
						series: [
							{ title: "Total", value: "Total", tooltip: "<strong>Total funding awarded<br /></strong>{{ Area }}: £{{ Total | toLocaleString() }}" }
						],
						axis: {
							x: {
								max: max_funding_total,
								ticks: [{
									value: 1000000,
									label: '£1M'},
									{
									value: 2000000,
									label: '£2M'},
									{
									value: 3000000,
									label: '£3M'},
									{
									value: 4000000,
									label: '£4M'}
									] 
							}
						}
					}
				}) }}
				<figcaption>Total funding awarded by area</figcaption>
				</figure>
			{{ /comp }}
		{{ /comp }}
	{{ /comp }}

	{{> const max_funding_ave = Math.ceil(Math.max(...release.funding_by_area.map(x => x.Average)) / 1e5) * 1e5 }}

	{{ comp WidthLimit }}
		{{ comp Card { classes: 'bg-green-100'} }}
				{{ comp SaveableVisualisation {id: 'average-award-by-area', file: "funding_by_area.csv" } }}
				<figure>
				{{ comp.oi.chart.bar({
					config: {
						data: release.funding_by_area,
						category: "Area",
						width: 1000,
						height: 400,
						series: [
							{ title: "Average", value: "Average", tooltip: "<strong>Average amount awarded<br /></strong>{{ Area }}: £{{ Average | toLocaleString() }}" }
						],
						axis: {
							x: {
								max: max_funding_ave,
								ticks: [{
									value: 200000,
									label: '£200k'},
									{
									value: 400000,
									label: '£400k'},
									{
									value: 600000,
									label: '£600k'},
									{
									value: 800000,
									label: '£800k'}
									]
							}
						}
					}
				}) }}
				<figcaption>Average award amount by area</figcaption>
				</figure>
			{{ /comp }}
		{{ /comp }}
	{{ /comp }}
{{ /comp }}

{{ comp Section }}
	<h2>Funded project outputs</h2>

	<p>Outputs of projects that were funded by NECA.</p>

	{{>
		const rows = release.project_outputs.reduce((a, c) => ({ ...a, [c.category]: c.actual }), {})
	}}
	{{ comp Card { classes: 'bg-green-100'} }}
		{{ comp SaveableVisualisation {id: 'funded-project-outputs', file: "project_outputs.csv" } }}
			<table style="margin-inline: auto;">
			<thead>
				<tr>
					<th scope="col" style="position:sticky;top:0;">Measure</th>
					<th scope="col" style="position:sticky;top:0;">Output</th>
				</tr>
			</thead>
			{{ for group of Object.keys(tableGroups) }}
			<tbody>
				<tr>
					<th scope="rowgroup" colspan=2 class="bg-green-75">{{ group }}</th>
				</tr>
				{{ for r of tableGroups[group] }}
				<tr>
					<th scope="row" class="bg-grey">{{ r }}</th>
					<td class="centred">{{ rows[r] |> toLocaleString }}</td>
				</tr>
				{{ /for }}
			</tbody>
			{{ /for }}
			</table>
{{ /comp }}