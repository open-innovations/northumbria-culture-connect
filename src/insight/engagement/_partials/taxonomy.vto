
{{ comp Section }}

	{{ include "./taxonomy-overview.md" |> md}}

{{ /comp }}

{{ comp Section }}

	<h2>A taxonomy for culture engagement</h2>

	<p>
	We developed a simple taxonomy to categorise both engagement activities and audience types.
	</p>

	<p>
	Desk research has highlighted that a shared taxonomy for culture engagement is lacking across the sector. Our project seeks to address this by mapping the data held by our pilot organisations into a common taxonomy, which will be refined and validated through user research.
	</p>

	<p>The taxonomy has two dimensions:</p>
	<ul>
	<li><strong>Activity category</strong> What activity types are being offered by the organisation?</li>
	<li><strong>Audience</strong> Who are the activities aimed at?</li>
	</ul>

	<p>This approach will help provide consistent and comparable data, regardless of an organisation's size, resource, type of services and level of data maturity.</p>

	<h3>What are the types of activities being offered?</h3>

	<p>
		The first dimension to consider is the category of activity that is being offered by the organisation. This helps aggregating information about culture activities across the geographic area, and potentially underpinning future developments such as impact models.
	</p>

	<ul>
	</li>Performance</li>
	<li>Exhibition</li>
	<li>Workshop</li>
	<li>Event</li>
	<li>Outreach</li>
	<li>Community Engagement</li>
	<li>School Engagement</li>
	<li>Other</li>
	</ul>

	<h3>Who are culture organisations engaging with?</h3>

	<ul class="normal-list">
		{{# Edit these in ./_data/taxonomy.yml #}}
		{{ for a of taxonomy.audience }}
			<li>
				{{ a.name }}
				{{ if a.children }}
				<ul class="normal-list">
				{{ for c of a.children }}
					<li>{{ c.name }}</li>
				{{ /for }}
				</ul>
				{{ /if }}
			</li>
		{{ /for }}
	</ul>

{{ /comp }}


{{ comp Section }}

	<h2>Category mapping</h2>

	<p>
		We're mapping case study data into a shared cultural engagement taxonomy to enable sector-wide comparison and analysis. The current mapping is a pilot proof-of-concept, to be improved and validated over time.
	</p>

	<style>
		.invalid {
			color: red;
		}
	</style>

	{{ comp Card { classes: 'bg-blue-100' } }}
		{{ comp SaveableVisualisation {id: 'monthly-issues', file: 'monthly_issues_by_branch.csv' } }}

			<div style="display: flex; justify-content:center; padding-top: 2em;">

			{{> function markInvalid(valid) {
				return (value) => valid.includes(value) ? value : `<span class="invalid">${value}</span>`
			}
				const validCategories = taxonomy.activity_category.map(c => c.name);
				const validAudience = taxonomy.audience.map(c => ([c.name, ...((c.children || []).map(s => `${c.name} / ${s.name}`)) ])).flat();
			}}

			{{ comp.oi.table({
				"config": {
				"data": groupings.toSorted((a, b) => {
							if (a.Organisation < b.Organisation) return -1;
							if (a.Organisation > b.Organisation) return 1;
							if (a.Activity < b.Activity ) return -1;
							if (a.Activity > b.Activity ) return 1;
							if (a['Activity category'] < b['Activity category'] ) return -1;
							if (a['Activity category'] > b['Activity category'] ) return 1;
							if (a.Audience < b.Audience ) return -1;
							if (a.Audience > b.Audience ) return 1;
							return 0;
						})
						.map(r => ({
							...r,
							['Activity category']: r['Activity category']
								.split(/\s*,\s*/).map(markInvalid(validCategories)).join(', '),
							Audience: r.Audience
								.split(/\s*,\s*/).map(markInvalid(validAudience)).join(', '),
						})),
				"columns": [{
						"name": "Organisation",
						"mergerows": true
					},{
						"name": "Activity",
						"mergerows": true
					},{
						"name": "Activity category",
						"mergerows": false
					},{
						"name": "Audience",
						"mergerows": false
					}]
				}
			}) }} 
			</div>
		{{ /comp }}
	{{ /comp }}

{{ /comp }}



{{# {{> console.log(
        groupings.toSorted((a, b) => {
            if (a.Organisation < b.Organisation) {
                return -1;
            }
        })
    )
}} #}}
