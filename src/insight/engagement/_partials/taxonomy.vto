
{{ comp Section }}

	{{ include "./taxonomy-overview.md" |> md}}

{{ /comp }}

{{ comp Section }}

	<h2>A taxonomy for culture engagement</h2>

	<p>
	As part of the pilot, we have developed a simple taxonomy to categorise both engagement activities and audience types. Desk research has highlighted that a shared taxonomy for culture engagement is lacking across the sector. Our project seeks to address this by mapping the data held by our pilot organisations into a common taxonomy, which will be refined and validated through user research.
	</p>

	<p>The taxonomy has two dimensions:</p>
	<ul>
	<li><strong>Activity category</strong> What activity types are being offered by the organisation?</li>
	<li><strong>Audience</strong> Who are the activities aimed at?</li>
	</ul>

	<p>This approach will help provide consistent and comparable data, regardless of an organisation's size, resource, type of services offered and level of data maturity.</p>

	<h3>What are the types of activities being offered?</h3>

	<p>
		The first dimension to consider is the category of activity that is being offered by the
		organisation. This is useful as it helps with aggregating information about culture
		activities across the geographic area, and potentially underpinning future developments
		such as impact models.
	</p>

	<ul class="normal-list">
		{{# Edit these in ./_data/taxonomy.yml #}}
		{{ for ac of taxonomy.activity_category }}
			<li>{{ ac.name }}</li>
		{{ /for }}
	</ul>

	<h3>Who are culture organisations engaging with?</h3>

	<p>
		Below is a breakdown of the groups that organisations are targeting and engaging with.
		These groupings will enable other organisations across the sector to build and improve
		on their existing data collection on Participation & Engagement.
	</p>

	<ul class="normal-list">
		{{# Edit these in ./_data/taxonomy.yml #}}
		{{ for a of taxonomy.audience }}
			<li>
				{{ a.name }}
				{{ if a.children }}
				<ul class="normal-list">
				{{ for c of a.children }}
					<li>{{ c.name }}</li>
				{{ /for }}
				</ul>
				{{ /if }}
			</li>
		{{ /for }}
	</ul>

{{ /comp }}


{{ comp Section }}

	<h2>Category mapping</h2>

	<p>
		We are in the process of mapping the data collected through these case studies into a shared taxonomy of culture engagement. This mapping will allow for meaningful comparisons and analysis across the sector, enhancing our understanding of trends and patterns in participation and engagement. Explore the current mapping below: this is a proof-of-concept generated in a pilot study, and will be developed and validated in future to ensure the taxonomy accurately represents the sector's offering.
	</p>

	<style>
		.invalid {
			color: red;
		}
	</style>


	<div style="display: flex; justify-content:center; padding-top: 2em;">

	{{> function markInvalid(valid) {
		return (value) => valid.includes(value) ? value : `<span class="invalid">${value}</span>`
	}
		const validCategories = taxonomy.activity_category.map(c => c.name);
		const validAudience = taxonomy.audience.map(c => ([c.name, ...((c.children || []).map(s => `${c.name} / ${s.name}`)) ])).flat();
	}}

	{{ comp.oi.table({
		"config": {
		"data": groupings.toSorted((a, b) => {
					if (a.Organisation < b.Organisation) return -1;
					if (a.Organisation > b.Organisation) return 1;
					if (a.Activity < b.Activity ) return -1;
					if (a.Activity > b.Activity ) return 1;
					if (a['Activity category'] < b['Activity category'] ) return -1;
					if (a['Activity category'] > b['Activity category'] ) return 1;
					if (a.Audience < b.Audience ) return -1;
					if (a.Audience > b.Audience ) return 1;
					return 0;
				})
				.map(r => ({
					...r,
					['Activity category']: r['Activity category']
						.split(/\s*,\s*/).map(markInvalid(validCategories)).join(', '),
					Audience: r.Audience
						.split(/\s*,\s*/).map(markInvalid(validAudience)).join(', '),
				})),
		"columns": [{
				"name": "Organisation",
				"mergerows": true
			},{
				"name": "Activity",
				"mergerows": true
			},{
				"name": "Activity category",
				"mergerows": false
			},{
				"name": "Audience",
				"mergerows": false
			}]
		}
	}) }} 
	</div>

{{ /comp }}



{{# {{> console.log(
        groupings.toSorted((a, b) => {
            if (a.Organisation < b.Organisation) {
                return -1;
            }
        })
    )
}} #}}
